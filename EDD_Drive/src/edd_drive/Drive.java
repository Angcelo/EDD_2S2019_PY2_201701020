/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edd_drive;

import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Arrays;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Gregory De Le√≥n
 */
public class Drive extends javax.swing.JFrame {

    public String carpetaactual="/";
    public String direccion="/";
    private final ImageIcon defaultIcon;
    private final ImageIcon defaultIconarchivo;
    private javax.swing.JButton carpetas[];
    private javax.swing.JButton archivos[];
    public Drive() {
        initComponents();   
        this.defaultIcon = new ImageIcon(getClass().getResource("/img/carpeta.png"));
        this.defaultIconarchivo=new ImageIcon(getClass().getResource("/img/archivo.png"));
        crearbotones(carpetaactual,direccion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPcar = new javax.swing.JPanel();
        btncrearcar = new javax.swing.JButton();
        btnmodcar = new javax.swing.JButton();
        btnelicar = new javax.swing.JButton();
        jParc = new javax.swing.JPanel();
        btncreararc = new javax.swing.JButton();
        btnuparc = new javax.swing.JButton();
        jPcontenido = new javax.swing.JPanel();
        btnsalir = new javax.swing.JButton();
        btnbitacora = new javax.swing.JButton();
        btnreportecar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("drive "+EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].usuario);
        setResizable(false);

        jPcar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Carpetas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btncrearcar.setText("Crear");
        btncrearcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncrearcarActionPerformed(evt);
            }
        });

        btnmodcar.setText("Modificar");
        btnmodcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodcarActionPerformed(evt);
            }
        });

        btnelicar.setText("Eiminar");
        btnelicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnelicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPcarLayout = new javax.swing.GroupLayout(jPcar);
        jPcar.setLayout(jPcarLayout);
        jPcarLayout.setHorizontalGroup(
            jPcarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPcarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPcarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btncrearcar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnmodcar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(btnelicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPcarLayout.setVerticalGroup(
            jPcarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPcarLayout.createSequentialGroup()
                .addComponent(btncrearcar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnmodcar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnelicar)
                .addContainerGap())
        );

        jParc.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Archivos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btncreararc.setText("Crear");
        btncreararc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreararcActionPerformed(evt);
            }
        });

        btnuparc.setText("Subir");

        javax.swing.GroupLayout jParcLayout = new javax.swing.GroupLayout(jParc);
        jParc.setLayout(jParcLayout);
        jParcLayout.setHorizontalGroup(
            jParcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jParcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jParcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btncreararc, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(btnuparc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jParcLayout.setVerticalGroup(
            jParcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jParcLayout.createSequentialGroup()
                .addComponent(btncreararc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnuparc)
                .addContainerGap())
        );

        jPcontenido.setBorder(javax.swing.BorderFactory.createTitledBorder("Drive"));

        btnsalir.setText("Salir");
        btnsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalirActionPerformed(evt);
            }
        });

        btnbitacora.setText("Bitacora");
        btnbitacora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbitacoraActionPerformed(evt);
            }
        });

        btnreportecar.setText("Reporte Carpetas");
        btnreportecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportecarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPcar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jParc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnsalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnbitacora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnreportecar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPcontenido, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPcontenido, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPcar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnreportecar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnbitacora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnsalir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncrearcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncrearcarActionPerformed
        String name=JOptionPane.showInputDialog(null,"Nombre de la carpeta");
        if(name!=null){
            System.out.println("Carpeta en la que se va a insertar"+this.carpetaactual);
            EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.insertar(this.carpetaactual, name);
            Calendar calendario = Calendar.getInstance();
            int hora =calendario.get(Calendar.HOUR_OF_DAY);
            int minutos = calendario.get(Calendar.MINUTE);
            int segundos = calendario.get(Calendar.SECOND);
            int a√±o=calendario.get(Calendar.YEAR);
            int mes=calendario.get(Calendar.MONTH)+1;
            int dia=calendario.get(Calendar.DATE);
            String fecha=dia+"/"+mes+"/"+a√±o;
            String tiempo=hora + ":" + minutos + ":" + segundos;
            EDD_Drive.bitacora.insertar(fecha, tiempo, "Creacion carpeta "+name ,EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].usuario);
        }
        crearbotones(this.carpetaactual,this.direccion);
    }//GEN-LAST:event_btncrearcarActionPerformed

    private void btncreararcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreararcActionPerformed
        javax.swing.JTextField nombre=new javax.swing.JTextField(10);
        javax.swing.JTextArea contenido=new javax.swing.JTextArea(10, 10);
        JPanel mypanel=new JPanel();
        mypanel.add(new JLabel("nombre:"));
        mypanel.add(nombre);
        mypanel.add(javax.swing.Box.createHorizontalStrut(25));
        mypanel.add(new JLabel("contenido:"));
        mypanel.add(contenido);
        if (JOptionPane.showConfirmDialog(null, mypanel,"Crear Archivo",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION) {
            Pattern patron=Pattern.compile(".+\\..+");
            Matcher encaja=patron.matcher(nombre.getText());
            System.out.println(nombre.getText());
            System.out.println(contenido.getText());
            if(encaja.find() && !contenido.getText().equals("")){
                String[] nomext=nombre.getText().split("\\.");
                try {
                    EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.InsertarArchivo(this.carpetaactual, nomext[0], nomext[1],contenido.getText());
                    Calendar calendario = Calendar.getInstance();
                    int hora =calendario.get(Calendar.HOUR_OF_DAY);
                    int minutos = calendario.get(Calendar.MINUTE);
                    int segundos = calendario.get(Calendar.SECOND);
                    int a√±o=calendario.get(Calendar.YEAR);
                    int mes=calendario.get(Calendar.MONTH)+1;
                    int dia=calendario.get(Calendar.DATE);
                    String fecha=dia+"/"+mes+"/"+a√±o;
                    String tiempo=hora + ":" + minutos + ":" + segundos;
                    EDD_Drive.bitacora.insertar(fecha, tiempo, "Creacion archivo " + nombre.getText() ,EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].usuario);
                    crearbotones(this.carpetaactual,this.direccion);
                } catch (IOException ex) {
                    Logger.getLogger(Drive.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btncreararcActionPerformed

    private void btnmodcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodcarActionPerformed
        String name=JOptionPane.showInputDialog(null,"Nombre de la carpeta");
        if (name!=null && !this.carpetaactual.equals("/")) {
            EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.modificarcarpeta(this.carpetaactual, name);   
            Calendar calendario = Calendar.getInstance();
            int hora =calendario.get(Calendar.HOUR_OF_DAY);
            int minutos = calendario.get(Calendar.MINUTE);
            int segundos = calendario.get(Calendar.SECOND);
            int a√±o=calendario.get(Calendar.YEAR);
            int mes=calendario.get(Calendar.MONTH)+1;
            int dia=calendario.get(Calendar.DATE);
            String fecha=dia+"/"+mes+"/"+a√±o;
            String tiempo=hora + ":" + minutos + ":" + segundos;
            EDD_Drive.bitacora.insertar(fecha, tiempo, "Modificacion de "+this.carpetaactual+" a "+name ,EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].usuario);
            this.direccion=this.direccion.replace(this.carpetaactual, name);
            this.carpetaactual=name;
            System.out.println("Esta es la direccion despues de modificar"+this.direccion);
            crearbotones(this.carpetaactual,this.direccion);
        }else if(this.carpetaactual.equals("/")){
            JOptionPane.showConfirmDialog(null, "No se puede modificar nombre de la carpeta raiz");
        }else{
            JOptionPane.showConfirmDialog(null, "Error");
        }
    }//GEN-LAST:event_btnmodcarActionPerformed

    private void btnelicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnelicarActionPerformed
        boolean decision=JOptionPane.showConfirmDialog(null, "Desea Eliminar")==JOptionPane.OK_OPTION;
        if (decision && !this.carpetaactual.equals("/")) {
            EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.eliminar(this.carpetaactual);   
            Calendar calendario = Calendar.getInstance();
            int hora =calendario.get(Calendar.HOUR_OF_DAY);
            int minutos = calendario.get(Calendar.MINUTE);
            int segundos = calendario.get(Calendar.SECOND);
            int a√±o=calendario.get(Calendar.YEAR);
            int mes=calendario.get(Calendar.MONTH)+1;
            int dia=calendario.get(Calendar.DATE);
            String fecha=dia+"/"+mes+"/"+a√±o;
            String tiempo=hora + ":" + minutos + ":" + segundos;
            EDD_Drive.bitacora.insertar(fecha, tiempo, "Eliminacion de "+this.carpetaactual,EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].usuario);
            this.direccion=this.direccion.replace("/"+this.carpetaactual, "");
            if(this.direccion.equals("")){
                this.direccion="/";
                this.carpetaactual="/";
            }else{
                String paracarpetactual[]=this.direccion.split("/");
                this.carpetaactual=paracarpetactual[paracarpetactual.length-1];
            }
            crearbotones(this.carpetaactual,this.direccion);
        }else if(this.carpetaactual.equals("/")){
            JOptionPane.showMessageDialog(null, "No se puede eliminar la carpeta raiz");
        }else{
            JOptionPane.showConfirmDialog(null, "Error");
        } 
    }//GEN-LAST:event_btnelicarActionPerformed

    private void btnsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalirActionPerformed
        EDD_Drive.usuarioactual=-1;
        Ventana inicio=new Ventana();
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnsalirActionPerformed

    private void btnbitacoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbitacoraActionPerformed
        try {
            EDD_Drive.bitacora.GraficarBitacora();
        } catch (IOException ex) {
            Logger.getLogger(Drive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnbitacoraActionPerformed

    private void btnreportecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportecarActionPerformed
        try {
            EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.Graficar();
        } catch (IOException ex) {
            Logger.getLogger(Drive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnreportecarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Drive().setVisible(true);
            }
        });
    }
    
    private void crearbotones(String carpeta,String direccion){
        jPcontenido.removeAll();
        jPcontenido.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), direccion, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        javax.swing.JButton btnregresar=new javax.swing.JButton("\n...");
        btnregresar.setIcon(defaultIcon);
        btnregresar.addActionListener((ActionEvent e) -> 
                {
                    String[] carpetas=Arrays.asList(this.direccion.split("/")).stream().filter(str -> !str.isEmpty()).collect(Collectors.toList()).toArray(new String[0]);
                    String direccionnueva="";
                    for (int i = 0; i < (carpetas.length-1); i++) {
                            direccionnueva+="/";
                            direccionnueva+=carpetas[i];        
                    }
                    if(direccionnueva.equals("")){
                        this.direccion="/";
                        this.carpetaactual="/";
                    }else{
                        this.direccion=direccionnueva;
                        System.out.println("carpeta nueva: "+carpetas[carpetas.length-2]);
                        this.carpetaactual=carpetas[carpetas.length-2];
                    }
                    crearbotones(carpetaactual,this.direccion);
                });
        jPcontenido.add(btnregresar);
        btnregresar.repaint();
        String carp=EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.BuscarArchivos(carpeta);
        String arch=EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.SearchArchivo(carpeta);
        System.out.println("esta es la lista de archivos: "+arch);
        String arraycarpetas[]=carp.split(",");
        
        String arrayarchivos[]=arch.split(",");
        this.carpetas=new javax.swing.JButton[arraycarpetas.length];
        this.archivos=new javax.swing.JButton[arrayarchivos.length];
        for (int i=0;i<arraycarpetas.length;i++) {
            if (!arraycarpetas[i].equals("")) {
                int index=arraycarpetas[i].indexOf("#");
                int index2=arraycarpetas[i].indexOf("#", index+1);
                String subcadena=arraycarpetas[i].substring(index, index2+1);
                int entero=Integer.parseInt(subcadena.replace("#", ""));
                System.out.println("entero "+entero);
                arraycarpetas[i]=arraycarpetas[i].replace(subcadena, "");
                String carpetas2[]=arraycarpetas[i].split("/");
                this.carpetas[i]=new javax.swing.JButton(carpetas2[carpetas2.length-1]);
                this.carpetas[i].setIcon(defaultIcon);
                if (entero==0) {
                    this.carpetas[i].setActionCommand(this.carpetas[i].getText());
                }else{
                    this.carpetas[i].setActionCommand(this.carpetas[i].getText()+entero);
                }
                this.carpetas[i].addActionListener((ActionEvent e) -> 
                {
                    if (this.carpetaactual.equals("/")) {
                        this.direccion+=e.getActionCommand();
                    }else{
                        this.direccion=this.direccion+"/"+e.getActionCommand();
                    }
                    this.carpetaactual=e.getActionCommand();   
                    crearbotones(carpetaactual,this.direccion);
                });
                jPcontenido.add(this.carpetas[i]);
            }  
        }
        for (int i=0;i<arrayarchivos.length;i++) {
            if (!arrayarchivos[i].equals("")) {
                this.archivos[i]=new javax.swing.JButton(arrayarchivos[i]);
                this.archivos[i].setIcon(this.defaultIconarchivo);
                this.archivos[i].addActionListener((ActionEvent e) -> 
                {
                    javax.swing.JTextField nombre=new javax.swing.JTextField(10);
                    javax.swing.JTextArea contenido=new javax.swing.JTextArea(10, 10);
                    nombre.setText(e.getActionCommand());
                    String[] arraycontenido=EDD_Drive.user.usuarios[EDD_Drive.usuarioactual].carpetas.contenidoarchivo(this.carpetaactual, e.getActionCommand());
                    contenido.setText(arraycontenido[2]);
                    JPanel mypanel=new JPanel();
                    mypanel.add(new JLabel("nombre:"));
                    mypanel.add(nombre);
                    mypanel.add(javax.swing.Box.createHorizontalStrut(25));
                    mypanel.add(new JLabel("contenido:"));
                    mypanel.add(contenido);
                    JOptionPane.showConfirmDialog(null, mypanel,"Modificar Archivo",JOptionPane.OK_CANCEL_OPTION);
                });
                jPcontenido.add(this.archivos[i]);
            }  
        }
        jPcontenido.revalidate();
        jPcontenido.repaint(); 
        
    }
    
    private void eventocarpeta(java.awt.event.ActionEvent evt,String nombre) {                                            
        
    }  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbitacora;
    private javax.swing.JButton btncreararc;
    private javax.swing.JButton btncrearcar;
    private javax.swing.JButton btnelicar;
    private javax.swing.JButton btnmodcar;
    private javax.swing.JButton btnreportecar;
    private javax.swing.JButton btnsalir;
    private javax.swing.JButton btnuparc;
    private javax.swing.JPanel jParc;
    private javax.swing.JPanel jPcar;
    private javax.swing.JPanel jPcontenido;
    // End of variables declaration//GEN-END:variables
}
